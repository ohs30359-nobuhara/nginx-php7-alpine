worker_processes auto;
worker_rlimit_nofile 100000;

error_log stderr warn;
pid /run/nginx.pid;

events {
  worker_connections 1024;
  multi_accept on;
  use epoll;
}

http {
  include mime.types;
  default_type application/octet-stream;

  # Define custom log format to include reponse times
  log_format main_timed '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for" '
  '$request_time $upstream_response_time $pipe $upstream_cache_status';

  server_tokens off;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  access_log off;
  keepalive_timeout 10;
  client_header_timeout 10;
  client_body_timeout 10;
  reset_timedout_connection on;
  send_timeout 10;
  
  # Default server definition
  server {
    listen [::]:80 default_server;
    listen 80 default_server;
    server_name _;

    sendfile off;

    root /var/www/public;
    index index.php;

    location / {
      # First attempt to serve request as file, then
      # as directory, then fall back to index.php
      try_files $uri $uri/ /index.php?$args;
    }

    # Redirect server error pages to the static page /50x.html
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root /var/lib/nginx/html;
    }

    # Pass the PHP scripts to PHP-FPM listening on 127.0.0.1:9000
    location ~ \.php$ {
      try_files $uri =404;
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass unix:/var/run/php7-fpm.sock;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param SCRIPT_NAME $fastcgi_script_name;
      fastcgi_index index.php;
      include fastcgi_params;
    }

    location ~ \.html$ {
      try_files $uri sample.html;
    }

    # Deny access to . files, for security
    location ~ /\. {
      log_not_found off;
      deny all;
    }
  }

  # Include other server configs
  include /etc/nginx/conf.d/*.conf;
}